/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        Interrogaci: Interrogaci_n {
            compatible = "zmk,behavior-tap-dance";
            label = "INTERROGACIÓN";
            #binding-cells = <0>;
            bindings = <&kp LS(MINUS)>, <&kp LS(EQUAL)>;
        };

        Exclamaci: Exclamaci_n {
            compatible = "zmk,behavior-tap-dance";
            label = "EXCLAMACIÓN";
            #binding-cells = <0>;
            bindings = <&kp LS(NUMBER_1)>, <&kp LS(EQUAL)>;
        };

        Dele: Del_Mod {
            compatible = "zmk,behavior-mod-morph";
            label = "DEL MOD";
            bindings = <&kp BSPC>, <&kp DEL>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        TABU: TABU {
            compatible = "zmk,behavior-tap-dance";
            label = "TABU";
            #binding-cells = <0>;
            bindings = <&kp TAB>, <&kp LS(TAB)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        ESK {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESC          &kp W  &kp Q  &kp P     &kp T  &kp SINGLE_QUOTE    &kp J      &kp Y  &kp I      &kp G    &kp SEMICOLON  &Dele
&mt LCMD TAB     &kp F  &kp S  &kp N     &kp R  &kp V               &kp H      &kp A  &kp E      &kp O    &kp U          &kp ENTER
&mt LSHFT GRAVE  &kp X  &kp D  &kp C     &kp L  &kp B               &kp Z      &kp M  &kp COMMA  &kp DOT  &kp K          &mt RSHFT MINUS
                               &kp LGUI  &mo 2  &kp SPACE           &kp ENTER  &mo 2  &kp RALT
            >;
        };

        Qwerty {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESC          &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y      &kp U  &kp I      &kp O       &kp P          &kp DEL
&mt LCTRL TAB    &kp A  &kp S  &kp D     &kp F  &kp G        &kp H      &kp J  &kp K      &kp L       &kp SEMICOLON  &kp ENTER
&mt LSHFT GRAVE  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N      &kp M  &kp COMMA  &kp PERIOD  &kp RA(MINUS)  &kp RSHFT
                               &kp LGUI  &mo 2  &kp SPACE    &kp ENTER  &mo 2  &kp RALT
            >;
        };

        Lower {
            bindings = <
&kp GRAVE  &kp NUMBER_1      &kp NUMBER_2      &kp NUMBER_3              &kp NUMBER_4      &kp N5        &kp NUMBER_6  &kp N7                 &kp N8         &kp N9            &kp N0                &kp DEL
&mo 5      &kp LS(NUMBER_3)  &kp LS(NUMBER_4)  &kp RA(NON_US_BACKSLASH)  &kp LS(NUMBER_2)  &kp LS(N5)    &kp LS(N7)    &kp LS(N9)             &kp LS(N8)     &kp LS(NUMBER_6)  &kp LS(N0)            &lt 5 SINGLE_QUOTE
&mo 3      &kp RA(NUMBER_1)  &kp SQT           &kp RA(NUMBER_3)          &kp RA(NUMBER_2)  &Exclamaci    &Interrogaci  &kp RA(RIGHT_BRACKET)  &kp RA(CLEAR)  &kp NON_US_HASH   &kp RA(SINGLE_QUOTE)  &mo 3
                                               &kp LGUI                  &mo 5             &kp SPACE     &kp ENTER     &mo 5                  &kp RGUI
            >;
        };

        Raise {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE  &trans  &kp PG_UP  &kp UP    &kp HOME   &kp LS(LG(NUMBER_4))        &kp LS(LG(NUMBER_4))      &kp HOME     &kp UP_ARROW  &kp PG_UP          &trans  &kp DEL
&kp CAPS   &trans  &kp LEFT   &kp DOWN  &kp RIGHT  &kp LS(LC(LG(NUMBER_4)))    &kp LS(LC(LG(NUMBER_4)))  &kp LEFT     &kp DOWN      &kp RIGHT          &none   &kp ENTER
&kp LCTRL  &none   &kp PG_DN  &trans    &kp END    &trans                      &none                     &kp LC(END)  &none         &kp LC(PAGE_DOWN)  &none   &kp RCTRL
                              &none     &kp LGUI   &kp LALT                    &kp RALT                  &kp RGUI     &none
            >;
        };

        NLock {
            bindings = <
&kp F1     &kp F2  &kp F3  &kp F4    &kp F5   &kp F6       &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_ASTERISK  &kp KP_DIVIDE  &kp DEL
&kp F7     &kp F8  &kp F9  &kp F10   &kp F11  &kp F12      &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp PLUS         &kp MINUS      &kp ENTER
&kp LSHFT  &tog 0  &tog 1  &trans    &trans   &trans       &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp EQUAL        &kp KP_COMMA   &TABU
                           &kp LGUI  &trans   &kp SPACE    &kp SPACE        &kp KP_NUMBER_0  &kp KP_DOT
            >;
        };

        Adj {
            bindings = <
&none           &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4     &rgb_ug RGB_EFF  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &none
&trans          &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4    &rgb_ug RGB_EFR  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &trans
&bt BT_CLR_ALL  &trans         &trans         &trans         &trans         &bt BT_CLR       &rgb_ug RGB_TOG  &none            &none            &trans           &trans           &trans
                                              &trans         &trans         &trans           &trans           &trans           &trans
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
